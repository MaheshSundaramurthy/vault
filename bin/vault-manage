#!/bin/bash
set -eo pipefail

help() {
cat << EOF
Usage: vault-manage <command>
--------------------------------------------------------------------------------
vault-manage preStart:
	Update the Consul '-advertise' address to use the interface ContainerPilot
	was told to listen on.

vault-manage health:
	Verify that both the Consul storage backend is healthy and that the Vault
	is unsealed.
EOF
}

# TODO: I don't think we actually need this
preStart() {
    _log "Updating consul advertise address"
    sed -i "s/IP_ADDRESS/${CONTAINERPILOT_VAULT_IP}/" /etc/consul/consul.json
    sed -i "s/IP_ADDRESS/${CONTAINERPILOT_VAULT_IP}/" /etc/vault.hcl
}

health() {
    # If consul info returns an error we'll pipefail and exit for a failed
    # health check. If we have no peers then try to join the raft via the CNS
    # svc record. Once a node is connected to at least one other peer it'll get
    # the rest of the raft via the Consul LAN gossip.
    # If we end up joining ourselves we just retry on the next health check
    # until we've got the whole cluster together.
    if [ $(consul info | awk '/num_peers/{print$3}') == 0 ]; then
        _log "No peers in raft"
        consul join ${VAULT}
    fi

    # 'vault status' returns non-zero exit code if we're not sealed
    vault status
}

_log() {
    echo "containerpilot: $@"
}

# ---------------------------------------------------
# parse arguments

while true; do
    case $1 in
        preStart | health | help) cmd=$1; shift; break;;
        *) break;;
    esac
done

if [ -z $cmd ]; then
    help
    exit
fi
$cmd $@
